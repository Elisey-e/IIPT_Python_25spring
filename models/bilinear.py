"""
Модуль для билинейной интерполяции цветных изображений на новой сетке координат.

Использует билинейную интерполяцию для пересчета значений цветного изображения
с одной сетки координат на другую. Поддерживает многоканальные изображения
(например, RGB или RGBA).

Требуемые библиотеки:
- numpy
- scipy
"""

import numpy as np
import scipy.interpolate as interp


def bilinear_interpolation(x: list, y: list, values: np.ndarray, xi: list, yi: list) -> np.ndarray:
    """
    Выполняет билинейную интерполяцию цветного изображения на новой сетке координат.

    Параметры:
    ----------
    x : list или np.ndarray
        1D массив x-координат исходной сетки (оси ширины изображения).
    y : list или np.ndarray
        1D массив y-координат исходной сетки (оси высоты изображения).
    values : np.ndarray
        3D массив значений исходного изображения в формате (H, W, C),
        где H - высота, W - ширина, C - количество цветовых каналов.
    xi : list или np.ndarray
        1D массив x-координат целевой сетки (оси ширины изображения).
    yi : list или np.ndarray
        1D массив y-координат целевой сетки (оси высоты изображения).

    Возвращает:
    ----------
    np.ndarray
        3D массив интерполированных значений в формате (H', W', C),
        где H' - высота новой сетки, W' - ширина новой сетки,
        C - количество цветовых каналов (сохранено исходное).

    Примеры:
    --------
    >>> import numpy as np
    >>> # Исходное изображение 2x2 RGB
    >>> x_old = [0, 1]
    >>> y_old = [0, 1]
    >>> img = np.array([[[255, 0, 0], [0, 255, 0]],
    ...                 [[0, 0, 255], [255, 255, 255]]])
    >>> # Новая сетка 4x4
    >>> x_new = np.linspace(0, 1, 4)
    >>> y_new = np.linspace(0, 1, 4)
    >>> # Интерполяция
    >>> interpolated = bilinear_interpolation(x_old, y_old, img, x_new, y_new)
    >>> interpolated.shape
    (4, 4, 3)

    Примечания:
    ----------
    - Для каждого цветового канала интерполяция выполняется независимо.
    - Значения нормализуются делением на 256 (предполагается вход в диапазоне 0-255).
    - Используется билинейная интерполяция (kind="linear" в scipy.interpolate.interp2d).
    - Функция поддерживает любое количество цветовых каналов в последней оси массива.
    - Для больших изображений рекомендуется использовать более оптимизированные методы,
      так как текущая реализация может быть медленной из-за создания интерполятора
      для каждого канала отдельно.
    """
    channels = []
    # Проходим по каждому цветовому каналу
    for i in range(values.shape[2]):
        # Создаем интерполятор для текущего канала
        f = interp.interp2d(x, y, values[:, :, i], kind="linear")
        # Выполняем интерполяцию на новой сетке
        channels.append(f(xi, yi))

    # Объединяем каналы и нормализуем значения
    return np.stack(channels, axis=-1) / 256
